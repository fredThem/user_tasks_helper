import chalk from "chalk"
import { execSync } from "child_process"
import { argv } from "process"
import rimraf from "rimraf"
import { access, constants } from "fs"

export const reinstallNodeModules = () => {
  argv.forEach((val, index) => {
    console.log(`${index}: ${val}`)
  })

  // Check if the file exists in the current directory.

  const sourcePath = `${argv[2]}/node_modules`
  console.log(chalk.yellow("Deleting node_modules...\n"))

  const checkIfExist = (color) => {
    access(sourcePath, constants.F_OK, (err) => {
      console.log(color(`${sourcePath} ${err ? "does not exist" : "exists"}`))
    })
  }

  checkIfExist(chalk.red)
  rimraf(sourcePath, (error) => {
    if (error) throw new Error(error)
  })
  checkIfExist(chalk.cyan)
  console.log(chalk.yellow("Reinstalling package"))

  const installCommand = `cd ${argv[2]} && npm install --legacy-peer-deps`
  execSync(installCommand, { stdio: [0, 1, 2] })

  checkIfExist(chalk.greenBright)
}
reinstallNodeModules()
